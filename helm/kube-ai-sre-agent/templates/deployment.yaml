apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: controller
spec:
  replicas: {{ .Values.controller.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: controller
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        fsGroup: 65532
      containers:
        - name: controller
          image: "{{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag }}"
          imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: WATCH_NAMESPACE
              value: {{ .Values.watchNamespace | quote }}
            - name: COOLDOWN_MINUTES
              value: {{ .Values.deduplication.cooldownMinutes | quote }}
            - name: ESCALATION_ENABLED
              value: {{ .Values.deduplication.escalation.enabled | quote }}
            - name: ESCALATION_THRESHOLD
              value: {{ .Values.deduplication.escalation.threshold | quote }}
            - name: SILENCE_DURATION_MINUTES
              value: {{ .Values.deduplication.escalation.silenceDurationMinutes | quote }}
            - name: LLM_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.llm.existingSecret }}{{ .Values.llm.existingSecret }}{{ else }}{{ .Chart.Name }}-llm{{ end }}
                  key: {{ .Values.llm.existingSecretKey }}
            {{- if .Values.slack.enabled }}
            - name: SLACK_WEBHOOK_URL
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.slack.existingSecret }}{{ .Values.slack.existingSecret }}{{ else }}{{ .Chart.Name }}-slack{{ end }}
                  key: {{ .Values.slack.existingSecretKey }}
            {{- end }}
          volumeMounts:
            - name: config
              mountPath: /etc/config
              readOnly: true
          resources:
            {{- toYaml .Values.controller.resources | nindent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
      volumes:
        - name: config
          configMap:
            name: {{ .Chart.Name }}-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
